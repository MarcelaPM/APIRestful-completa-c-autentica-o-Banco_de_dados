from sqlalchemy import create_engine, Column, Integer, String, ForeignKey
from sqlalchemy.orm import scoped_session, sessionmaker, relationship  
from sqlalchemy.ext.declarative import declarative_base
#imortação da base declarativa

engine = create_engine('sqlite:///atividade.db') 

db_session = scoped_session(sessionmaker(autocommit=False, bind=engine)) 

Base=declarative_base() #Deafult do SQLAlquemy
Base.query = db_session.query_property()

#Tudo que está acima, são as operações necessarias para criarmos um baco de dados e fazer as consultas e alterações.

#Projeto: atividades. Teremos pessoas e suas atividades
#Criando as tabelas:

#Tabela para cadastro de usuarios, senha e status de usuário ativo (1) ou inativo (0)
class Usuarios(Base):
  __tablename__='usuarios'
  id=Column(Integer, primary_key=True)
  login=Column(String(20), unique=True)
  senha=Column(String(20))
  ativo=Column(Integer)

  def __repr__(self): 
    return '<Usuario {}>'.format(self.login)

  def salva(self):
    db_session.add(self) 
    db_session.commit()

  def deleta(self):
    db_session.delete(self) 
    db_session.commit()

class Pessoas(Base):
  __tablename__='pessoas' 
  id=Column(Integer, primary_key=True)
  nome=Column(String(40), index=True)
  idade=Column(Integer)
  atividades = relationship('Atividades')

  def __repr__(self): 
    return '<Pessoa {}>'.format(self.nome)

  def salva(self):
    db_session.add(self) 
    db_session.commit()

  def deleta(self):
    db_session.delete(self) 
    db_session.commit()

class Atividades(Base):
  __tablename__='atividades'
  id=Column(Integer, primary_key=True)
  nome=Column(String(80))
  pessoa_nome=Column(String(40),index=True)
  pessoa_id=Column(Integer, ForeignKey('pessoas.id'))

  def __repr__(self): 
    return '<Atividade {}>'.format(self.nome)

  def salva(self):
    db_session.add(self) 
    db_session.commit()

  def deleta(self):
    db_session.delete(self) 
    db_session.commit()

def init_db():
  Base.metadata.create_all(bind=engine) 
  
if __name__=='__main__':
  init_db()
